library(wMICA)
detectCores
library(parallel)
detectCores()
?ICMg.links.sampler.SeedsAndWeights
setwd("/media/user/data/Data/Christoph/Desktop/wMICA_Package/wMICA/data")
indata=read.csv("MICASample.csv",row.names=1)
save.image("/media/user/data/Data/Christoph/Desktop/wMICA_Package/wMICA/data/MICASample.rda.RData")
indata[1:10,]
load("/media/user/data/Data/Christoph/Desktop/wMICA_Package/wMICA/data/MICASample.rda.RData")
indata=t(indata)
input=indata
n.cores=detectCores()-1
threshold=.3
C=20
Seeds=c()
Weight=0
alpha=10
beta=.01
B.num=10
B.size=10
S.num=10
S.size=10
output_prefix="MICA"
gene_names=colnames(input)
gene_names
?MINE
input=apply(input,2,as.numeric)
head(input)
print(paste0("Starting MINERVA with ",n.cores, "cores.  Please Wait."))
MINE=mine(x=input,n.cores=n.cores)
str(MINE)
MINE=mine(x=input,n.cores=n.cores)$MIC
head(MINE)
print(paste0("saving MIC Array as ",outname))
write.csv(MINE,file=outname)
outname=paste0(output_prefix,"_MICARRAY.csv")
print(paste0("saving MIC Array as ",outname))
write.csv(MINE,file=outname)
outname=paste0(output_prefix,"_Links.csv")
print(paste0("Creating Links File ",outname))
outfile=file(outname,"w")
MINE_THRESH=MINE>threshold
table(MINE_THRESH)
threshold=.4
MINE_THRESH=MINE>threshold
table(MINE_THRESH)
close(outfile)
close(outfile)
outfile=file(outname,"w")
firstRow="Gene1,Gene2,Strength"
cat(firstRow,file=outfile,sep="\n")
MINE_THRESH=MINE>threshold
count=0
for(i in 1:(nrow(MINE)-1)){
for(j in (i+1):nrow(MINE)){
if(MINE_THRESH[i,j]){
count=count+1
outrow=paste(i,j,MINE[i,j],sep=",")
cat(outrow,file=outfile,sep="\n")
}
}
}
close(outfile)
LINKS=read.csv(outfile)
LINKS=read.csv(outname)
LINKS
count
nodes=length(table(LINKS[,c(1:2)]))
nodes
table(LINKS[,c(1:2)])
LINKS[,1]
table(LINKS[,1])
nodes=c(LINKS[,1],LINKS[,2])
nodes=length(table(nodes))
nodes
outfile=file(outname,"w")
firstRow="Gene1,Gene2,Strength"
cat(firstRow,file=outfile,sep="\n")
MINE_THRESH=MINE>threshold
edges=0
for(i in 1:(nrow(MINE)-1)){
for(j in (i+1):nrow(MINE)){
if(MINE_THRESH[i,j]){
edges=edges+1
outrow=paste(i,j,MINE[i,j],sep=",")
cat(outrow,file=outfile,sep="\n")
}
}
}
close(outfile)
LINKS=read.csv(outname)
LINKS=apply(LINKS,2,as.numeric)
nodes=c(LINKS[,1],LINKS[,2])
nodes=length(table(nodes))
print(paste0("There are ",nodes," genes and ", edges," edges.  Starting ICMg."))
t1=c(gene_names[,c(5,7,12,56,1)])
t1=c(gene_names[c(5,7,12,56,1)])
t1
t2=c(1,2,3,3,5)
Seeds=cbind(t1,t2)
Seeds
temp=match(Seeds[,1],gene_names)
temp
temp=match(Seeds[,1],gene_names)
Seeds[,1]=temp
Seeds=apply(Seeds,2,as.numeric)
Seeds
Seeds
Seeds=c()
wICMg=ICMg.links.sampler.SeedsAndWeights(L = LINKS,C = C,Seeds = Seeds,Weight = Weight,
alpha = alpha,beta = beta,B.num = B.num,
B.size = B.size,S.num = S.num,S.size = S.size,
C.boost = 1)
detach("package:minerva", unload=TRUE)
detach("package:wMICA", unload=TRUE)
library("minerva", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
detach("package:minerva", unload=TRUE)
remove.packages("wMICA", lib="~/R/x86_64-pc-linux-gnu-library/3.2")
install.packages("/media/user/data/Data/Christoph/Desktop/wMICA_Package/wMICA.tar.gz", repos = NULL, type = "source")
install.packages("/media/user/data/Data/Christoph/Desktop/wMICA_Package/wMICA.tar.gz", repos = NULL, type = "source")
wICMg=ICMg.links.sampler.SeedsAndWeights(L = LINKS,C = C,Seeds = Seeds,Weight = Weight,
alpha = alpha,beta = beta,B.num = B.num,
B.size = B.size,S.num = S.num,S.size = S.size,
C.boost = 1)
library("wMICA", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
wICMg=ICMg.links.sampler.SeedsAndWeights(L = LINKS,C = C,Seeds = Seeds,Weight = Weight,
alpha = alpha,beta = beta,B.num = B.num,
B.size = B.size,S.num = S.num,S.size = S.size,
C.boost = 1)
detach("package:wMICA", unload=TRUE)
remove.packages("wMICA", lib="~/R/x86_64-pc-linux-gnu-library/3.2")
install.packages("/media/user/data/Data/Christoph/Desktop/wMICA_Package/wMICA.tar.gz", repos = NULL, type = "source")
library("wMICA", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
wICMg=ICMg.links.sampler.SeedsAndWeights(L = LINKS,C = C,Seeds = Seeds,Weight = Weight,
alpha = alpha,beta = beta,B.num = B.num,
B.size = B.size,S.num = S.num,S.size = S.size,
C.boost = 1)
?ICMg.links.sampler.SeedsAndWeights
?ICMg.links.sampler.SeedsAndWeights
